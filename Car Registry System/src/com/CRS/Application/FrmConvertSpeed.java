/*
 * This JFrame is responsible for speed conversions
 */
package com.CRS.Application;

import com.CRS.Utils.Converter;
import com.CRS.Utils.CoolStuff;

/*
 * Car Registry System / Application / Conversions / Speed
 * @author MRX
 * Version : 1.0.0
 */

public class FrmConvertSpeed extends javax.swing.JFrame {

    /**
     * Creates new form FrmConverterSpeed
     */
    public FrmConvertSpeed() {
        initComponents();
        // Custom icon for jar and Jframe
        this.setIconImage(CoolStuff.createIcon().getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpConvert = new javax.swing.ButtonGroup();
        panColor = new javax.swing.JPanel();
        btnConvert = new javax.swing.JButton();
        panMphToKph = new javax.swing.JPanel();
        radMphToKph = new javax.swing.JRadioButton();
        lblMph = new javax.swing.JLabel();
        txtMph = new javax.swing.JTextField();
        lblKph = new javax.swing.JLabel();
        txtKph = new javax.swing.JTextField();
        panKphToMph = new javax.swing.JPanel();
        radKphToMph = new javax.swing.JRadioButton();
        lblKph2 = new javax.swing.JLabel();
        txtKph2 = new javax.swing.JTextField();
        lblMph2 = new javax.swing.JLabel();
        txtMph2 = new javax.swing.JTextField();
        lblTitle = new javax.swing.JLabel();
        lblTip = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("CRS - Convert Speed");
        setResizable(false);

        panColor.setBackground(new java.awt.Color(255, 204, 204));

        btnConvert.setText("Convert");
        btnConvert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnConvert.setEnabled(false);
        btnConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConvertActionPerformed(evt);
            }
        });

        panMphToKph.setBackground(new java.awt.Color(255, 204, 204));
        panMphToKph.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        grpConvert.add(radMphToKph);
        radMphToKph.setText("mph to kph");
        radMphToKph.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        radMphToKph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radMphToKphActionPerformed(evt);
            }
        });

        lblMph.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblMph.setText("mph :");

        txtMph.setEditable(false);
        txtMph.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtMph.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMphKeyReleased(evt);
            }
        });

        lblKph.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblKph.setText("kph :");

        txtKph.setEditable(false);
        txtKph.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        javax.swing.GroupLayout panMphToKphLayout = new javax.swing.GroupLayout(panMphToKph);
        panMphToKph.setLayout(panMphToKphLayout);
        panMphToKphLayout.setHorizontalGroup(
            panMphToKphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMphToKphLayout.createSequentialGroup()
                .addGroup(panMphToKphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panMphToKphLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(radMphToKph))
                    .addGroup(panMphToKphLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(panMphToKphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKph)
                            .addComponent(txtKph, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMph, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMph))))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        panMphToKphLayout.setVerticalGroup(
            panMphToKphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panMphToKphLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radMphToKph)
                .addGap(24, 24, 24)
                .addComponent(lblMph)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblKph)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        panKphToMph.setBackground(new java.awt.Color(255, 204, 204));
        panKphToMph.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        grpConvert.add(radKphToMph);
        radKphToMph.setText("kph to mph");
        radKphToMph.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        radKphToMph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radKphToMphActionPerformed(evt);
            }
        });

        lblKph2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblKph2.setText("kph :");

        txtKph2.setEditable(false);
        txtKph2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtKph2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKph2KeyReleased(evt);
            }
        });

        lblMph2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lblMph2.setText("mph :");

        txtMph2.setEditable(false);
        txtMph2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        javax.swing.GroupLayout panKphToMphLayout = new javax.swing.GroupLayout(panKphToMph);
        panKphToMph.setLayout(panKphToMphLayout);
        panKphToMphLayout.setHorizontalGroup(
            panKphToMphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panKphToMphLayout.createSequentialGroup()
                .addGroup(panKphToMphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panKphToMphLayout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(radKphToMph))
                    .addGroup(panKphToMphLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(panKphToMphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblKph2)
                            .addComponent(txtKph2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMph2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMph2))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        panKphToMphLayout.setVerticalGroup(
            panKphToMphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panKphToMphLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radKphToMph)
                .addGap(26, 26, 26)
                .addComponent(lblKph2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKph2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMph2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMph2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblTitle.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblTitle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/CRS/icons_package/speedometer.png"))); // NOI18N
        lblTitle.setText("Speed Converter");

        lblTip.setBackground(new java.awt.Color(255, 204, 204));
        lblTip.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblTip.setForeground(new java.awt.Color(0, 0, 204));
        lblTip.setText("?");
        lblTip.setToolTipText("miles per hour / kilometers per hour ");
        lblTip.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout panColorLayout = new javax.swing.GroupLayout(panColor);
        panColor.setLayout(panColorLayout);
        panColorLayout.setHorizontalGroup(
            panColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panColorLayout.createSequentialGroup()
                .addGroup(panColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panColorLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(btnConvert, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panColorLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(lblTitle)
                        .addGap(153, 153, 153)
                        .addComponent(lblTip, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panColorLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(panMphToKph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(panKphToMph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(676, Short.MAX_VALUE))
        );
        panColorLayout.setVerticalGroup(
            panColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panColorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitle)
                    .addComponent(lblTip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panKphToMph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panMphToKph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnConvert)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(530, 367));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConvertActionPerformed

        // Need to verify which radio was selected
        if(radMphToKph.isSelected()) {

            // We need to parse cc textbox value and pass it to method

            Integer res = Converter.mphToKph(Integer.parseInt(txtMph.getText()));
            txtKph.setText(res.toString());

        } else {

            // We need to parse inch textbox value and pass it to method

            Integer res = Converter.kphToMph(Integer.parseInt(txtKph2.getText()));
            txtMph2.setText(res.toString());

        }
    }//GEN-LAST:event_btnConvertActionPerformed

    private void radMphToKphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radMphToKphActionPerformed
        // Enable first panel
        txtMph.setEditable(true);
        txtKph2.setEditable(false);
        txtMph.requestFocus();

        txtMph2.setText(null);
        txtKph2.setText(null);

        btnConvert.setEnabled(true);
    }//GEN-LAST:event_radMphToKphActionPerformed

    private void txtMphKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMphKeyReleased
        // Only numbers allowed
        if(! CoolStuff.isNumber(txtMph.getText()))
        txtMph.setText(null);
    }//GEN-LAST:event_txtMphKeyReleased

    private void radKphToMphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radKphToMphActionPerformed
        // Enable second panel
        txtKph2.setEditable(true);
        txtMph.setEditable(false);
        txtKph2.requestFocus();

        txtMph.setText(null);
        txtKph.setText(null);

        btnConvert.setEnabled(true);
    }//GEN-LAST:event_radKphToMphActionPerformed

    private void txtKph2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKph2KeyReleased
        // Only numbers allowed
        if(! CoolStuff.isNumber(txtKph2.getText()))
        txtKph2.setText(null);
    }//GEN-LAST:event_txtKph2KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmConvertSpeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmConvertSpeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmConvertSpeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmConvertSpeed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmConvertSpeed().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConvert;
    private javax.swing.ButtonGroup grpConvert;
    private javax.swing.JLabel lblKph;
    private javax.swing.JLabel lblKph2;
    private javax.swing.JLabel lblMph;
    private javax.swing.JLabel lblMph2;
    private javax.swing.JLabel lblTip;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panColor;
    private javax.swing.JPanel panKphToMph;
    private javax.swing.JPanel panMphToKph;
    private javax.swing.JRadioButton radKphToMph;
    private javax.swing.JRadioButton radMphToKph;
    private javax.swing.JTextField txtKph;
    private javax.swing.JTextField txtKph2;
    private javax.swing.JTextField txtMph;
    private javax.swing.JTextField txtMph2;
    // End of variables declaration//GEN-END:variables
}
